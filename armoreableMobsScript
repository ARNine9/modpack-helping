With "Armoreable Mobs", you can set any item to any entity when spawned using CraftTweaker.

I created a python script that creates several groups of armor automatically, for each mob you put on the list, it will create 50 groups of armor, with a chance of having enchantments or not.

My script can only select 1 enchantment per armor, but I can update later.

The script is in python, to use it create a file with the extension ".py" and copy the code below in the created file.

```# Imports```
import random

# Lists
armor_enchants = ["minecraft:thorns", "minecraft:unbreaking", "minecraft:projectile_protection", "minecraft:blast_protection", "minecraft:fire_protection", "minecraft:protection", "tombstone:blessing", "apotheosis:icy_thorns", "apotheosis:rebounding", "apotheosis:magic_protection", "forbidden_arcanus:indestructible"]
held_enchants = ["minecraft:knockback", "minecraft:sharpness", "enigmaticlegacy:slayer", "minecraft:unbreaking", "minecraft:fire_aspect", "apotheosis:sea_infusion"]

helmets = ["<item:iceandfire:tide_blue_helmet>", "<item:iceandfire:tide_bronze_helmet>", "<item:iceandfire:tide_deepblue_helmet>", "<item:iceandfire:tide_green_helmet>", "<item:iceandfire:tide_purple_helmet>", "<item:iceandfire:tide_red_helmet>", "<item:iceandfire:tide_teal_helmet>", "<item:iceandfire:forest_troll_leather_helmet>", "<item:iceandfire:frost_troll_leather_helmet>", "<item:minecraft:turtle_helmet>", "<item:minecraft:leather_helmet>", "<item:minecraft:chainmail_helmet>", "<item:minecraft:iron_helmet>", "<item:minecraft:diamond_helmet>", "<item:minecraft:golden_helmet>", "<item:minecraft:netherite_helmet>", "<item:botania:manasteel_helmet>", "<item:botania:elementium_helmet>", "<item:botania:manaweave_helmet>", "<item:mysticalagriculture:inferium_helmet>", "<item:mysticalagriculture:prudentium_helmet>", "<item:mysticalagriculture:tertium_helmet>", "<item:iceandfire:armor_silver_metal_helmet>", "<item:iceandfire:armor_copper_metal_helmet>", "<item:iceandfire:armor_red_helmet>", "<item:iceandfire:armor_bronze_helmet>", "<item:iceandfire:armor_green_helmet>", "<item:iceandfire:armor_gray_helmet>", "<item:iceandfire:armor_blue_helmet>", "<item:iceandfire:armor_white_helmet>", "<item:iceandfire:armor_sapphire_helmet>", "<item:iceandfire:armor_silver_helmet>", "<item:iceandfire:armor_electric_helmet>", "<item:iceandfire:armor_amythest_helmet>", "<item:iceandfire:armor_copper_helmet>", "<item:iceandfire:armor_black_helmet>", "<item:dungeons_gear:shadow_walker_helmet>", "<item:dungeons_gear:phantom_helmet>", "<item:dungeons_gear:frost_bite_helmet>", "<item:dungeons_gear:plate_helmet>", "<item:dungeons_gear:full_metal_helmet>", "<item:dungeons_gear:reinforced_mail_helmet>", "<item:dungeons_gear:stalwart_helmet>", "<item:dungeons_gear:scale_mail_helmet>", "<item:dungeons_gear:highland_helmet>", "<item:iceandfire:mountain_troll_leather_helmet>", "<item:mowziesmobs:wrought_helmet>", "<item:blue_skies:pyrope_helmet>", "<item:blue_skies:aquite_helmet>", "<item:blue_skies:diopside_helmet>", "<item:blue_skies:charoite_helmet>", "<item:blue_skies:horizonite_helmet>", "<item:blue_skies:shadow_helmet>", "<item:turtlemancy:turtle_helmet>", "<item:turtlemancy:magmatic_turtle_helmet>", "<item:dungeons_gear:hunters_helmet>", "<item:dungeons_gear:archers_helmet>", "<item:dungeons_gear:battle_robes_helmet>", "<item:dungeons_gear:champions_helmet>", "<item:dungeons_gear:heros_helmet>", "<item:dungeons_gear:dark_helmet>", "<item:dungeons_gear:titans_shroud_helmet>", "<item:dungeons_gear:evocation_robes_helmet>", "<item:dungeons_gear:ember_robes_helmet>", "<item:dungeons_gear:grim_helmet>", "<item:dungeons_gear:wither_helmet>", "<item:dungeons_gear:guards_helmet>", "<item:dungeons_gear:curious_helmet>", "<item:dungeons_gear:mercenary_helmet>", "<item:dungeons_gear:renegade_helmet>", "<item:dungeons_gear:hungry_horror_helmet>", "<item:dungeons_gear:ocelot_helmet>", "<item:forbidden_arcanus:obsidian_helmet>", "<item:dungeons_gear:snow_helmet>", "<item:dungeons_gear:frost_helmet>", "<item:dungeons_gear:soul_helmet>", "<item:dungeons_gear:souldancer_helmet>", "<item:dungeons_gear:spelunker_helmet>", "<item:dungeons_gear:cave_crawler_helmet>", "<item:dungeons_gear:thief_helmet>", "<item:dungeons_gear:spider_helmet>", "<item:dungeons_gear:wolf_helmet>", "<item:dungeons_gear:fox_helmet>", "<item:dungeons_gear:arctic_fox_helmet>", "<item:dungeons_gear:climbing_helmet>", "<item:dungeons_gear:rugged_climbing_helmet>", "<item:dungeons_gear:goat_helmet>", "<item:dungeons_gear:emerald_helmet>", "<item:dungeons_gear:gilded_glory_helmet>", "<item:dungeons_gear:opulent_helmet>", "<item:dungeons_gear:beenest_helmet>", "<item:dungeons_gear:beehive_helmet>", "<item:iceandfire:sheep_helmet>", "<item:iceandfire:deathworm_yellow_helmet>", "<item:iceandfire:deathworm_white_helmet>", "<item:iceandfire:deathworm_red_helmet>", "<item:iceandfire:myrmex_desert_helmet>", "<item:iceandfire:myrmex_jungle_helmet>", "<item:forbidden_arcanus:mortem_helmet>", "<item:forbidden_arcanus:arcane_gold_helmet>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>"]
chestplates = ["<item:iceandfire:armor_white_chestplate>", "<item:iceandfire:armor_sapphire_chestplate>", "<item:iceandfire:armor_silver_chestplate>", "<item:iceandfire:armor_electric_chestplate>", "<item:iceandfire:armor_amythest_chestplate>", "<item:iceandfire:armor_copper_chestplate>", "<item:iceandfire:armor_black_chestplate>", "<item:iceandfire:tide_blue_chestplate>", "<item:iceandfire:tide_bronze_chestplate>", "<item:minecraft:leather_chestplate>", "<item:minecraft:chainmail_chestplate>", "<item:minecraft:iron_chestplate>", "<item:minecraft:diamond_chestplate>", "<item:minecraft:golden_chestplate>", "<item:minecraft:netherite_chestplate>", "<item:botania:manasteel_chestplate>", "<item:botania:elementium_chestplate>", "<item:botania:manaweave_chestplate>", "<item:mysticalagriculture:inferium_chestplate>", "<item:mysticalagriculture:prudentium_chestplate>", "<item:mysticalagriculture:tertium_chestplate>", "<item:forbidden_arcanus:mortem_chestplate>", "<item:forbidden_arcanus:arcane_gold_chestplate>", "<item:iceandfire:armor_silver_metal_chestplate>", "<item:iceandfire:armor_copper_metal_chestplate>", "<item:iceandfire:sheep_chestplate>", "<item:iceandfire:deathworm_yellow_chestplate>", "<item:iceandfire:deathworm_white_chestplate>", "<item:iceandfire:deathworm_red_chestplate>", "<item:iceandfire:myrmex_desert_chestplate>", "<item:iceandfire:myrmex_jungle_chestplate>", "<item:iceandfire:armor_red_chestplate>", "<item:iceandfire:armor_bronze_chestplate>", "<item:iceandfire:armor_green_chestplate>", "<item:iceandfire:armor_gray_chestplate>", "<item:iceandfire:armor_blue_chestplate>", "<item:dungeons_gear:grim_chestplate>", "<item:dungeons_gear:wither_chestplate>", "<item:dungeons_gear:guards_chestplate>", "<item:dungeons_gear:curious_chestplate>", "<item:dungeons_gear:mercenary_chestplate>", "<item:dungeons_gear:renegade_chestplate>", "<item:dungeons_gear:hungry_horror_chestplate>", "<item:dungeons_gear:ocelot_chestplate>", "<item:dungeons_gear:shadow_walker_chestplate>", "<item:iceandfire:tide_deepblue_chestplate>", "<item:iceandfire:tide_green_chestplate>", "<item:iceandfire:tide_purple_chestplate>", "<item:iceandfire:tide_red_chestplate>", "<item:iceandfire:tide_teal_chestplate>", "<item:iceandfire:forest_troll_leather_chestplate>", "<item:iceandfire:frost_troll_leather_chestplate>", "<item:iceandfire:mountain_troll_leather_chestplate>", "<item:alexsmobs:crocodile_chestplate>", "<item:blue_skies:pyrope_chestplate>", "<item:blue_skies:aquite_chestplate>", "<item:blue_skies:diopside_chestplate>", "<item:blue_skies:charoite_chestplate>", "<item:blue_skies:horizonite_chestplate>", "<item:blue_skies:shadow_chestplate>", "<item:turtlemancy:turtle_chestplate>", "<item:turtlemancy:magmatic_turtle_chestplate>", "<item:autumnity:snail_shell_chestplate>", "<item:dungeons_gear:hunters_chestplate>", "<item:dungeons_gear:archers_chestplate>", "<item:dungeons_gear:battle_robes_chestplate>", "<item:dungeons_gear:champions_chestplate>", "<item:dungeons_gear:heros_chestplate>", "<item:dungeons_gear:dark_chestplate>", "<item:dungeons_gear:titans_shroud_chestplate>", "<item:dungeons_gear:evocation_robes_chestplate>", "<item:dungeons_gear:ember_robes_chestplate>", "<item:dungeons_gear:phantom_chestplate>", "<item:dungeons_gear:frost_bite_chestplate>", "<item:dungeons_gear:plate_chestplate>", "<item:dungeons_gear:full_metal_chestplate>", "<item:dungeons_gear:reinforced_mail_chestplate>", "<item:dungeons_gear:stalwart_chestplate>", "<item:dungeons_gear:scale_mail_chestplate>", "<item:dungeons_gear:highland_chestplate>", "<item:dungeons_gear:snow_chestplate>", "<item:dungeons_gear:frost_chestplate>", "<item:dungeons_gear:soul_chestplate>", "<item:dungeons_gear:souldancer_chestplate>", "<item:dungeons_gear:spelunker_chestplate>", "<item:dungeons_gear:cave_crawler_chestplate>", "<item:dungeons_gear:thief_chestplate>", "<item:dungeons_gear:spider_chestplate>", "<item:dungeons_gear:wolf_chestplate>", "<item:dungeons_gear:fox_chestplate>", "<item:dungeons_gear:arctic_fox_chestplate>", "<item:dungeons_gear:climbing_chestplate>", "<item:dungeons_gear:rugged_climbing_chestplate>", "<item:dungeons_gear:goat_chestplate>", "<item:dungeons_gear:emerald_chestplate>", "<item:dungeons_gear:gilded_glory_chestplate>", "<item:dungeons_gear:opulent_chestplate>", "<item:dungeons_gear:beenest_chestplate>", "<item:dungeons_gear:beehive_chestplate>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>"]
leggings = ["<item:iceandfire:armor_green_leggings>", "<item:iceandfire:armor_gray_leggings>", "<item:iceandfire:armor_blue_leggings>", "<item:iceandfire:armor_white_leggings>", "<item:iceandfire:armor_sapphire_leggings>", "<item:iceandfire:armor_silver_leggings>", "<item:iceandfire:armor_electric_leggings>", "<item:iceandfire:armor_amythest_leggings>", "<item:iceandfire:armor_copper_leggings>", "<item:minecraft:leather_leggings>", "<item:minecraft:chainmail_leggings>", "<item:minecraft:iron_leggings>", "<item:minecraft:diamond_leggings>", "<item:minecraft:golden_leggings>", "<item:minecraft:netherite_leggings>", "<item:botania:manasteel_leggings>", "<item:botania:elementium_leggings>", "<item:botania:manaweave_leggings>", "<item:mysticalagriculture:inferium_leggings>", "<item:mysticalagriculture:prudentium_leggings>", "<item:mysticalagriculture:tertium_leggings>", "<item:ars_nouveau:novice_leggings>", "<item:ars_nouveau:apprentice_leggings>", "<item:ars_nouveau:archmage_leggings>", "<item:forbidden_arcanus:mortem_leggings>", "<item:forbidden_arcanus:arcane_gold_leggings>", "<item:iceandfire:armor_silver_metal_leggings>", "<item:iceandfire:armor_copper_metal_leggings>", "<item:iceandfire:sheep_leggings>", "<item:iceandfire:deathworm_yellow_leggings>", "<item:iceandfire:deathworm_white_leggings>", "<item:iceandfire:deathworm_red_leggings>", "<item:iceandfire:myrmex_desert_leggings>", "<item:iceandfire:myrmex_jungle_leggings>", "<item:iceandfire:armor_red_leggings>", "<item:iceandfire:armor_bronze_leggings>", "<item:aquamirae:abyssal_leggings>", "<item:aquamirae:three_bolt_leggings>", "<item:dungeons_gear:hunters_leggings>", "<item:dungeons_gear:archers_leggings>", "<item:dungeons_gear:battle_robes_leggings>", "<item:dungeons_gear:champions_leggings>", "<item:dungeons_gear:heros_leggings>", "<item:dungeons_gear:dark_leggings>", "<item:dungeons_gear:titans_shroud_leggings>", "<item:iceandfire:armor_black_leggings>", "<item:iceandfire:tide_blue_leggings>", "<item:iceandfire:tide_bronze_leggings>", "<item:iceandfire:tide_deepblue_leggings>", "<item:iceandfire:tide_green_leggings>", "<item:iceandfire:tide_purple_leggings>", "<item:iceandfire:tide_red_leggings>", "<item:iceandfire:tide_teal_leggings>", "<item:iceandfire:forest_troll_leather_leggings>", "<item:iceandfire:frost_troll_leather_leggings>", "<item:iceandfire:mountain_troll_leather_leggings>", "<item:alexsmobs:centipede_leggings>", "<item:alexsmobs:emu_leggings>", "<item:blue_skies:pyrope_leggings>", "<item:blue_skies:aquite_leggings>", "<item:blue_skies:diopside_leggings>", "<item:blue_skies:charoite_leggings>", "<item:blue_skies:horizonite_leggings>", "<item:blue_skies:shadow_leggings>", "<item:mana-and-artifice:mage_leggings>", "<item:mana-and-artifice:bone_armor_leggings>", "<item:mana-and-artifice:fey_armor_leggings>", "<item:mana-and-artifice:demon_armor_leggings>", "<item:mana-and-artifice:council_armor_leggings>", "<item:turtlemancy:turtle_leggings>", "<item:turtlemancy:magmatic_turtle_leggings>", "<item:aquamirae:terrible_leggings>", "<item:dungeons_gear:wolf_leggings>", "<item:dungeons_gear:fox_leggings>", "<item:dungeons_gear:arctic_fox_leggings>", "<item:dungeons_gear:climbing_leggings>", "<item:dungeons_gear:rugged_climbing_leggings>", "<item:dungeons_gear:goat_leggings>", "<item:dungeons_gear:emerald_leggings>", "<item:dungeons_gear:gilded_glory_leggings>", "<item:dungeons_gear:opulent_leggings>", "<item:dungeons_gear:curious_leggings>", "<item:dungeons_gear:ember_robes_leggings>", "<item:dungeons_gear:evocation_robes_leggings>", "<item:dungeons_gear:grim_leggings>", "<item:dungeons_gear:guards_leggings>", "<item:dungeons_gear:mercenary_leggings>", "<item:dungeons_gear:renegade_leggings>", "<item:dungeons_gear:wither_leggings>", "<item:dungeons_gear:hungry_horror_leggings>", "<item:dungeons_gear:ocelot_leggings>", "<item:dungeons_gear:shadow_walker_leggings>", "<item:dungeons_gear:phantom_leggings>", "<item:dungeons_gear:frost_bite_leggings>", "<item:dungeons_gear:plate_leggings>", "<item:dungeons_gear:full_metal_leggings>", "<item:dungeons_gear:reinforced_mail_leggings>", "<item:dungeons_gear:stalwart_leggings>", "<item:dungeons_gear:scale_mail_leggings>", "<item:dungeons_gear:highland_leggings>", "<item:dungeons_gear:snow_leggings>", "<item:dungeons_gear:frost_leggings>", "<item:dungeons_gear:soul_leggings>", "<item:dungeons_gear:souldancer_leggings>", "<item:dungeons_gear:spelunker_leggings>", "<item:dungeons_gear:cave_crawler_leggings>", "<item:dungeons_gear:thief_leggings>", "<item:dungeons_gear:spider_leggings>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>"]
boots = ["<item:iceandfire:armor_bronze_boots>", "<item:iceandfire:armor_green_boots>", "<item:iceandfire:armor_gray_boots>", "<item:iceandfire:armor_blue_boots>", "<item:iceandfire:armor_white_boots>", "<item:iceandfire:armor_sapphire_boots>", "<item:iceandfire:armor_silver_boots>", "<item:iceandfire:armor_electric_boots>", "<item:iceandfire:armor_amythest_boots>", "<item:minecraft:leather_boots>", "<item:minecraft:chainmail_boots>", "<item:minecraft:iron_boots>", "<item:minecraft:diamond_boots>", "<item:minecraft:golden_boots>", "<item:minecraft:netherite_boots>", "<item:botania:manasteel_boots>", "<item:botania:elementium_boots>", "<item:botania:manaweave_boots>", "<item:mysticalagriculture:inferium_boots>", "<item:mysticalagriculture:prudentium_boots>", "<item:mysticalagriculture:tertium_boots>", "<item:ars_nouveau:novice_boots>", "<item:ars_nouveau:apprentice_boots>", "<item:ars_nouveau:archmage_boots>", "<item:forbidden_arcanus:mortem_boots>", "<item:forbidden_arcanus:arcane_gold_boots>", "<item:forbidden_arcanus:obsidian_boots>", "<item:iceandfire:armor_silver_metal_boots>", "<item:iceandfire:armor_copper_metal_boots>", "<item:iceandfire:sheep_boots>", "<item:iceandfire:deathworm_yellow_boots>", "<item:iceandfire:deathworm_white_boots>", "<item:iceandfire:deathworm_red_boots>", "<item:iceandfire:myrmex_desert_boots>", "<item:iceandfire:myrmex_jungle_boots>", "<item:iceandfire:armor_red_boots>", "<item:dungeons_gear:battle_robes_boots>", "<item:dungeons_gear:champions_boots>", "<item:dungeons_gear:heros_boots>", "<item:dungeons_gear:dark_boots>", "<item:dungeons_gear:titans_shroud_boots>", "<item:dungeons_gear:evocation_robes_boots>", "<item:dungeons_gear:ember_robes_boots>", "<item:dungeons_gear:grim_boots>", "<item:dungeons_gear:wither_boots>", "<item:iceandfire:armor_electric_boots>", "<item:iceandfire:armor_amythest_boots>", "<item:iceandfire:armor_copper_boots>", "<item:iceandfire:armor_black_boots>", "<item:iceandfire:tide_blue_boots>", "<item:iceandfire:tide_bronze_boots>", "<item:iceandfire:tide_deepblue_boots>", "<item:iceandfire:tide_green_boots>", "<item:iceandfire:tide_purple_boots>", "<item:iceandfire:tide_red_boots>", "<item:iceandfire:tide_teal_boots>", "<item:iceandfire:forest_troll_leather_boots>", "<item:iceandfire:frost_troll_leather_boots>", "<item:iceandfire:mountain_troll_leather_boots>", "<item:alexsmobs:roadrunner_boots>", "<item:blue_skies:pyrope_boots>", "<item:blue_skies:aquite_boots>", "<item:blue_skies:diopside_boots>", "<item:blue_skies:charoite_boots>", "<item:blue_skies:horizonite_boots>", "<item:blue_skies:shadow_boots>", "<item:eidolon:warlock_boots>", "<item:aquamirae:terrible_boots>", "<item:aquamirae:abyssal_boots>", "<item:aquamirae:three_bolt_boots>", "<item:dungeons_gear:hunters_boots>", "<item:dungeons_gear:archers_boots>", "<item:dungeons_gear:rugged_climbing_boots>", "<item:dungeons_gear:goat_boots>", "<item:dungeons_gear:emerald_boots>", "<item:dungeons_gear:gilded_glory_boots>", "<item:dungeons_gear:opulent_boots>", "<item:dungeons_gear:beenest_boots>", "<item:dungeons_gear:beehive_boots>", "<item:dungeons_gear:guards_boots>", "<item:dungeons_gear:curious_boots>", "<item:dungeons_gear:mercenary_boots>", "<item:dungeons_gear:renegade_boots>", "<item:dungeons_gear:hungry_horror_boots>", "<item:dungeons_gear:ocelot_boots>", "<item:dungeons_gear:shadow_walker_boots>", "<item:dungeons_gear:phantom_boots>", "<item:dungeons_gear:frost_bite_boots>", "<item:dungeons_gear:plate_boots>", "<item:dungeons_gear:full_metal_boots>", "<item:dungeons_gear:reinforced_mail_boots>", "<item:dungeons_gear:stalwart_boots>", "<item:dungeons_gear:scale_mail_boots>", "<item:dungeons_gear:highland_boots>", "<item:dungeons_gear:snow_boots>", "<item:dungeons_gear:frost_boots>", "<item:dungeons_gear:soul_boots>", "<item:dungeons_gear:souldancer_boots>", "<item:dungeons_gear:spelunker_boots>", "<item:dungeons_gear:cave_crawler_boots>", "<item:dungeons_gear:thief_boots>", "<item:dungeons_gear:spider_boots>", "<item:dungeons_gear:wolf_boots>", "<item:dungeons_gear:fox_boots>", "<item:dungeons_gear:arctic_fox_boots>", "<item:dungeons_gear:climbing_boots>"]

hand = ["<item:iceandfire:myrmex_jungle_sword>", "<item:iceandfire:myrmex_jungle_sword_venom>", "<item:iceandfire:dread_sword>", "<item:blue_skies:infused_arc_sword>", "<item:blue_skies:different_sword>", "<item:blue_skies:bluebright_sword>", "<item:blue_skies:lunar_sword>", "<item:blue_skies:starlit_sword>", "<item:blue_skies:dusk_sword>", "<item:minecraft:wooden_sword>", "<item:minecraft:stone_sword>", "<item:minecraft:golden_sword>", "<item:minecraft:iron_sword>", "<item:minecraft:diamond_sword>", "<item:minecraft:netherite_sword>", "<item:botania:manasteel_sword>", "<item:botania:elementium_sword>", "<item:botania:star_sword>", "<item:botania:terra_sword>", "<item:botania:thunder_sword>", "<item:mysticalagriculture:inferium_sword>", "<item:mysticalagriculture:prudentium_sword>", "<item:mysticalagriculture:tertium_sword>", "<item:ars_nouveau:enchanters_sword>", "<item:mob_grinding_utils:null_sword>", "<item:astralsorcery:crystal_sword>", "<item:astralsorcery:infused_crystal_sword>", "<item:forbidden_arcanus:arcane_golden_sword>", "<item:forbidden_arcanus:reinforced_arcane_golden_sword>", "<item:forbidden_arcanus:obsidian_sword>", "<item:iceandfire:silver_sword>", "<item:iceandfire:copper_sword>", "<item:iceandfire:dragonbone_sword>", "<item:iceandfire:hippogryph_sword>", "<item:iceandfire:myrmex_desert_sword>", "<item:iceandfire:myrmex_desert_sword_venom>", "<item:useless_sword:redstone_sword>", "<item:useless_sword:lapis_lazuli_sword>", "<item:useless_sword:slime_sword>", "<item:useless_sword:cactus_sword>", "<item:useless_sword:sand_sword>", "<item:useless_sword:red_sand_sword>", "<item:useless_sword:soul_sand_sword>", "<item:useless_sword:sandstone_sword>", "<item:useless_sword:red_sandstone_sword>", "<item:blue_skies:frostbright_sword>", "<item:blue_skies:maple_sword>", "<item:blue_skies:cherry_sword>", "<item:blue_skies:turquoise_stone_sword>", "<item:blue_skies:lunar_stone_sword>", "<item:blue_skies:pyrope_sword>", "<item:blue_skies:aquite_sword>", "<item:blue_skies:diopside_sword>", "<item:blue_skies:charoite_sword>", "<item:blue_skies:horizonite_sword>", "<item:eidolon:sapping_sword>", "<item:boss_tools:steel_sword>", "<item:aiotbotania:livingwood_sword>", "<item:aiotbotania:livingrock_sword>", "<item:theabyss:bone_sword_item>", "<item:theabyss:aberythe_sword>", "<item:aquamirae:terrible_sword>", "<item:dungeons_gear:dancers_sword>", "<item:dungeons_gear:sword>", "<item:dungeons_gear:stone_sword>", "<item:dungeons_gear:gold_sword>", "<item:dungeons_gear:diamond_sword>", "<item:dungeons_gear:hawkbrand>", "<item:dungeons_gear:sinister_sword>", "<item:dungeons_gear:claymore>", "<item:dungeons_gear:broadsword>", "<item:useless_sword:coal_sword>", "<item:useless_sword:enderman_sword>", "<item:useless_sword:shulker_sword>", "<item:useless_sword:valhalla_sword>", "<item:useless_sword:turtle_sword>", "<item:useless_sword:ravager_sword>", "<item:useless_sword:vex_sword>", "<item:useless_sword:spider_sword>", "<item:useless_sword:charged_sword>", "<item:useless_sword:tamed_sword>", "<item:useless_sword:clay_sword>", "<item:useless_sword:witherred_sword>", "<item:useless_sword:furnace_sword>", "<item:useless_sword:alloy_sword>", "<item:useless_sword:emerald_sword>", "<item:useless_sword:prismarine_sword>", "<item:useless_sword:frozen_sword>", "<item:useless_sword:dragon_breath_sword>", "<item:useless_sword:molten_sword>", "<item:useless_sword:glass_sword>", "<item:useless_sword:water_sword>", "<item:useless_sword:lava_sword>", "<item:useless_sword:mushroom_sword>", "<item:useless_sword:quartz_sword>", "<item:useless_sword:glowstone_sword>", "<item:useless_sword:netherrack_sword>", "<item:useless_sword:endstone_sword>", "<item:useless_sword:thorny_wooden_sword>", "<item:useless_sword:guardian_sword>", "<item:useless_sword:elder_guardian_sword>", "<item:useless_sword:beacon_sword>", "<item:useless_sword:undying_sword>", "<item:useless_sword:ghast_sword>", "<item:useless_sword:nether_catalyst_sword>", "<item:useless_sword:wither_sword>", "<item:useless_sword:end_crystal_sword>", "<item:useless_sword:ender_catalyst_sword>", "<item:useless_sword:guster_sword>", "<item:useless_sword:sword_of_fate>", "<item:useless_sword:end_pyro_sword>", "<item:useless_sword:bolloom_sword>", "<item:useless_sword:life_draining_sword>", "<item:useless_sword:wrought_sword>", "<item:useless_sword:luminious_sword>", "<item:useless_sword:foliaath_sword>", "<item:wandering_bag:sword_from_elsewhere>", "<item:useless_sword:honneycomb_sword>", "<item:useless_sword:tube_coral_sword>", "<item:useless_sword:brain_coral_sword>", "<item:useless_sword:bubble_coral_sword>", "<item:useless_sword:fire_coral_sword>", "<item:useless_sword:horn_coral_sword>", "<item:useless_sword:magmatic_sword>", "<item:useless_sword:magma_sword>", "<item:useless_sword:basalt_broadsword>", "<item:useless_sword:crismon_sword>", "<item:useless_sword:warped_sword>", "<item:useless_sword:crying_sword>", "<item:useless_sword:frosted_sword>", "<item:useless_sword:sword_of_immortality>", "<item:useless_sword:ancient_guardian_sword>", "<item:useless_sword:nether_striker>", "<item:useless_sword:netherite_slash_sword>", "<item:useless_sword:pyro_sword>", "<item:useless_sword:pyro_soul_sword>", "<item:useless_sword:thorny_golden_sword>", "<item:useless_sword:thorny_stone_sword>", "<item:useless_sword:thorny_iron_sword>", "<item:useless_sword:thorny_diamond_sword>", "<item:useless_sword:message_in_a_sword>", "<item:useless_sword:neptunium_grab_sword>", "<item:useless_sword:chocolate_sword>", "<item:useless_sword:hemolymph_broadsword>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>", "<item:minecraft:air>"]

mobs = ["minecraft:zombie", "minecraft:skeleton", "vampirism:vampire", "minecraft:spider", "minecraft:creeper", "minecraft:zombie_villager", "ars_nouveau:wilden_stalker", "ars_nouveau:wilden_hunter", "eidolon:wraith", "minecraft:pillager", "minecraft:stray", "eidolon:zombie_brute", "minecraft:zombified_piglin", "minecraft:piglin", "minecraft:wither_skeleton", "minecraft:blaze", "quark:forgotten", "minecraft:husk", "minecraft:drowned"]

# Others
mob_value = 0

armor_group = 1

def armor_enchant():

     enchant = ""
     enchant_value = random.randint(1,100)

     if enchant_value > 80:
          enchant = '.withTag({RepairCost: ' + str(random.randint(1,4)) +' as int, Enchantments: [{lvl: ' + str(random.randint(1,4)) + ' as short, id: "' + random.choice(armor_enchants) + '" as string}]})'

     return enchant

def held_enchant():
     global armor_group
     armor_group += 1
     enchant = ""
     enchant_value = random.randint(1,100)

     if enchant_value > 90:
          enchant = '.withTag({RepairCost: ' + str(random.randint(1,4)) +' as int, Enchantments: [{lvl: ' + str(random.randint(1,9)) + ' as short, id: "' + random.choice(held_enchants) + '" as string}]})'

     return enchant

# Generator
for item in mobs:
     # Your Custom Path
     op = open(f"C:/Users/Admin/curseforge/minecraft/Instances/aaaa/scripts/craftTweaker/armoreableMobs/mob{mob_value + 1}.zs", "w")
     # 50 Armor groups for one mob in list 
     op.write(f"""import mods.armoreablemods.ArmorGroup;

new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);

new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);

new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);

new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);

new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     
new ArmorGroup("mob{mob_value + 1}_group{armor_group}")
     .inSlot(<equipmentslottype:head>, {random.choice(helmets)}{armor_enchant()})
     .inSlot(<equipmentslottype:chest>, {random.choice(chestplates)}{armor_enchant()})
     .inSlot(<equipmentslottype:legs>, {random.choice(leggings)}{armor_enchant()})
     .inSlot(<equipmentslottype:feet>, {random.choice(boots)}{armor_enchant()})
     .inSlot(<equipmentslottype:mainhand>, {random.choice(hand)}{held_enchant()})
     .register(<entitytype:{mobs[mob_value]}>);
     bananas
""")
     mob_value += 1
